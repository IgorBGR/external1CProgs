//1. Есть строка, которая может содержать большие латинские буквы и цифры.
//Она напечатана не очень качественно и передана пользователям.
//Они должны набрать на клавиатуре то, что видят на листке, не зная ограничений на состав символов (т.е., «А» вместо «A» или «О» вместо «0»).
//Нужно по строке получить все комбинации, которые могут ввести разумные пользователи.
//ОТВЕТ(не совсем понял условия... надо выяснить из какого количества символов абонент может набрать этот код?) Например 26 латинских букв + 11 букв из русского алфавита(имеющие аналог в латинском) + цифра 0 (другие цифры трудно спутать с буквой) = 38 символов)
//2.Есть 10 рулонов билетов по 100000 штук в каждом (000000-099999, …, 900000-999999), номера которых состоят из 6-ти цифр. Надо ранжировать их по числу счастливых билетов.
//Счастливым считается билет, у номера которого сумма первых 3-х цифр равна сумме последних 3-х (н., 184355).
//Решение должны быть максимально быстрым. При применении формул, нужно доказательство их правильности.
//3. Есть план счетов. Нужно получить список счетов самого нижнего уровня, имеющих ровно 2 указанных вида субконто. Вариант: по крайней мере 2 указанных.
//4. Конфигурация БУ. Нужен простой отчёт в виде таблицы: строки контрагенты, колонки организации, на пересечении – задолженность контрагента перед организацией на указанную (общую) дату.
//2 варианта: через СКД и с помощью обычного табличного макета с обходом выборок.

Процедура КнопкаВыполнитьНажатие(Кнопка)
	//1.
	Допустимые = "I1,O0О,AА,BВ,CС,DОO,EЕ,FГ,GCС,HН,KК,L,MМ,NИ,PР,S5,TТГ,U,V,W,QОO0,YУ,Z2,З3,ЬЫb,g9,yу"; //похожие символы
	Соответствия = Новый Структура(Допустимые);
	Длина = СтрДлина(ВходнаяСтрока);
	Если Длина = 0 Тогда Возврат; КонецЕсли;
	МассивВариантов = Новый СписокЗначений;
	Для н = 1 по Длина Цикл
		символ = Сред(ВходнаяСтрока,н,1);
		Если символ = "," или Найти(Допустимые,символ) = 0 Тогда 
			МассивВариантов.Добавить(1,символ,н = Длина);
			Продолжить;
		КонецЕсли;
		Для Каждого Стр Из Соответствия Цикл
			Строка = Стр.Ключ;
			Если Найти(Строка,символ) > 0 тогда
				МассивВариантов.Добавить(1,Строка,н = Длина);
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	Пока Истина Цикл
		Строка = "";
		Для каждого Элемент из МассивВариантов Цикл
			Строка = Строка + Сред(Элемент.Представление,Элемент.Значение,1);
		КонецЦикла;
		Сообщить(Строка);
		
		Для каждого Элемент из МассивВариантов Цикл
			Элемент.Значение = (Элемент.Значение + 1)%(СтрДлина(Элемент.Представление) + 1);
			Если Элемент.Значение = 0 Тогда
				Если Элемент.Пометка Тогда Возврат; КонецЕсли;
				Элемент.Значение = 1;
				Продолжить;
			КонецЕсли;
			Прервать;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры
//ЧтениеXML.ПолучитьАтрибут(   может стоит переделать в коде на 
//Вариант синтаксиса: По полному имени
//Синтаксис: ПолучитьАтрибут(<ПолноеИмяАтрибута>) ?
Процедура ОсновныеДействияФормыпоиск2(Кнопка)
	Билетики2();
КонецПроцедуры

Процедура ОсновныеДействияФормытест2(Кнопка)
	для н = 1 по 1000000 Цикл если 1 = 1 тогда в = Истина; КонецЕсли; КонецЦикла; //медленней
	для н = 1 по 1000000 Цикл если Истина тогда в = Истина; КонецЕсли; КонецЦикла; // чем это на 0.003 сек
КонецПроцедуры

Процедура Билетики1(Кнопка) //1с решение
	//2.
	Т = Новый ТаблицаЗначений;
	Т.Колонки.Добавить("СуммаЗнаков",Новый ОписаниеТипов("Число",
								  Новый КвалификаторыЧисла(0, 0, ДопустимыйЗнак.Любой)));
	Т.Колонки.Добавить("Вес",Новый ОписаниеТипов("Число",
								  Новый КвалификаторыЧисла(0, 0, ДопустимыйЗнак.Любой)));								  
	Т.Колонки.Добавить("Группа",Новый ОписаниеТипов("Число",
								  Новый КвалификаторыЧисла(0, 0, ДопустимыйЗнак.Любой)));								  
	Т.Колонки.Добавить("СуммаГруппы",Новый ОписаниеТипов("Число",
								  Новый КвалификаторыЧисла(0, 0, ДопустимыйЗнак.Любой)));								  
	Для к1 = 0 по 9 Цикл
		Для к2 = 0 по 9 Цикл
			Для к3 = 0 по 9 Цикл
				стр = Т.Добавить();
				стр.СуммаЗнаков = к1+к2+к3;
				стр.Вес = 1;
				стр.СуммаГруппы = 0;
				Ч = Число(Формат(к1,"ЧЦ=1; ЧС=1; ЧН=; ЧГ=0")+Формат(к2,"ЧЦ=1; ЧС=1; ЧН=; ЧГ=0")+Формат(к3,"ЧЦ=1; ЧС=1; ЧН=; ЧГ=0"));
				стр.Группа = к1+1;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	//измерение Весов
	Тн = Т.Скопировать();
	Тн.Свернуть("СуммаЗнаков","Вес");
	//Пересчет весов на группы	
	Для Каждого СтрокаСгруппирован Из тн Цикл
		М = Т.НайтиСтроки(Новый Структура("СуммаЗнаков",СтрокаСгруппирован.СуммаЗнаков));
		Для каждого С из М Цикл
			С.СуммаГруппы = С.СуммаГруппы + СтрокаСгруппирован.Вес;
		КонецЦикла;
	КонецЦикла;
	//Перегруппировка по рулонам
	Т.Свернуть("Группа","СуммаГруппы");
	Т.Сортировать("СуммаГруппы убыв");
	//Результат
	Для каждого ссс из т Цикл
	Сообщить(Строка(ссс.Группа)+"    "+Строка(ссс.СуммаГруппы));	
	КонецЦикла;
	
КонецПроцедуры
//не оптимизированный код
Процедура Билетики2()//пацанское решение
	м = Новый Массив(30);
	г = Новый Массив(11);
//инициализация таблицы 3 знака 	
	Для к1 = 0 по 9 Цикл
		Для к2 = 0 по 9 Цикл
			Для к3 = 0 по 9 Цикл
				кк =  к1+к2+к3;
				м[кк] = ?(ЗначениеЗаполнено(м[кк]),м[кк] + 1,1);
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
//поиск счастливых билетиков	
	Для к1 = 0 по 9 Цикл
		г[к1+1] = 0;
		Для к2 = 0 по 9 Цикл
			Для к3 = 0 по 9 Цикл
				Если м[к1+к2+к3] > 1 Тогда
					г[к1+1] = г[к1+1] + м[к1+к2+к3];
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Сообщить("Рулон "+Строка(к1+1)+" Содержит "+Строка(г[к1+1])+" Счастливых билетов");
	КонецЦикла;	
//Ранжирование рулонов	
	Для н = 1 по 10 Цикл
		Максимум = 0;Рулон = 1;
		Для р = 1 по 10 Цикл
			Если г[р] > Максимум Тогда
				Максимум = г[р];Рулон = р;	
			КонецЕсли;
		КонецЦикла;
		г[Рулон] = 0;
		Сообщить(Строка(н)+" Место. Рулон "+Строка(Рулон));
	КонецЦикла;
КонецПроцедуры
//неудачная попытка оптимизировать код, кто круче ?
Процедура Билетики3() //мутант
	м = Новый Массив(30);  
	г = Новый Массив(11);   
	
	Для Режим = 0 по 2 Цикл // .. это пример как нельзя оптимизировать
		Для к1 = 0 по 9 Цикл //даже комментарии не помогут разобрать, за-то на 3 строки меньше кода
			к11 = к1 + 1; Максимум = 0;Рулон = 1;
			Если Режим = 2 Тогда 	//Ранжирование рулонов	
				рр = Макс(г[1],г[2],г[3],г[4],г[5],г[6],г[7],г[8],г[9],г[10]);	
				Рулон = г.Найти(рр);
				г[Рулон] = 0;
				Сообщить(Строка(к11)+" Место. Рулон "+Строка(Рулон)+ "  " + Строка(рр)+ " билетов"); //уагрррр я монстр ЫЫЫ
			Иначе
				г[к11] = 0;
				Для к2 = 0 по 9 Цикл
					Для к3 = 0 по 9 Цикл
						кк =  к1+к2+к3;
						Если Режим = 0 тогда 
							//Подсчет билетиков
							м[кк] = ?(ЗначениеЗаполнено(м[кк]),м[кк] + 1,1);
						ИначеЕсли м[кк] > 1 Тогда
							//группировка	
							г[к11] = г[к11] + м[кк];
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;	
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура Билетики4()//код для самых ...
Т="МаксeH	w
|	qг[M)+ "" N0 по B); Vк1CначеXогдаZЦиклL + K;QJ
|IHДля кGКонецFMC1]DСтрока(S РежимWAЕслиPWНовый Массив(O		Iм[кк]UРулонYWB9 LT],MRFLа;E = WHIQ	мO30V qгO11V  qqДляAB2 LHG1T wC1WCK1; eимумW0;YW1;wPA2 ТZ QррWe(M1R2R3R4R5R6R7R8R9R10]);	QYWг.Найти(рр)JMY]W0JСообщить(SC1)+"" Место. Y ""+SYN ""KSррNбилетов""VwИXQDW0JG2TQ	G3TQIккW C+к2+к3JIPA0 тZ QI	UW?(ЗXниеЗаполнено(U),UK1,1)JIИXP U > 1 ТZQI	DWDKUJIFPJ	EQEwFP;	HEqE";
for а=1 to 29 do в=Mid("ewqMNBVCXZLKJHGFDSAPOIUYTREWQ",а,1);б=find(Т,в);Т=StrReplace(Mid(Т,б+1),в,Лев(Т,б-1));enddo;
Сообщить(Т);
Выполнить(Т);	
КонецПроцедуры
 
Процедура ОсновныеДействияФормыПоископт(Кнопка)
	Билетики3();
КонецПроцедуры

процедура найтиНижнийУровеньсСубконто()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Ссылка,
		|	Хозрасчетный.Родитель
		|ПОМЕСТИТЬ ВТ_второйуровень
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	НЕ Хозрасчетный.Родитель = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Пустаяссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_второйуровень.Ссылка
		|ПОМЕСТИТЬ вт_нижнийуровень
		|ИЗ
		|	ВТ_второйуровень КАК ВТ_второйуровень
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_второйуровень КАК ВТ_второйуровень1
		|		ПО ВТ_второйуровень.Родитель = ВТ_второйуровень1.Ссылка
		|ГДЕ
		|	ВТ_второйуровень1.Ссылка ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_нижнийуровень.Ссылка
		|ИЗ
		|	вт_нижнийуровень КАК вт_нижнийуровень
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланСчетов.Хозрасчетный.ВидыСубконто КАК ХозрасчетныйВидыСубконто
		|		ПО вт_нижнийуровень.Ссылка = ХозрасчетныйВидыСубконто.Ссылка
		|ГДЕ
		|	ХозрасчетныйВидыСубконто.ВидСубконто В(&ВидСубконто)";

	//Запрос.УстановитьПараметр("ВидСубконто", ВидСубконто);

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
КонецПроцедуры

Процедура ОсновныеДействияФормыБилеты4(Кнопка)
	Билетики4();
КонецПроцедуры

Функция ЗаменитьРус(Стр)
	Стр = ВРЕГ(Стр);
	Анг = "QWERTYUIOPASDFGHJKLZXCVBNM";
	Рус = "ЙЦУКЕНГШЩЗФЫВАПРОЛДЯЧСМИТЬ";
	Для НомерСимвола = 1 по СтрДлина(Рус) Цикл
		ВходнаяСтрока = СтрЗаменить(Стр,Сред(Рус,НомерСимвола,1),Сред(Анг,НомерСимвола,1));
	КонецЦикла;
	Возврат Стр;
КонецФункции
//Проверка префикса VIN на корректность.
Функция КонтрольПрефиксаВин(Префикс, ВыводитьСообщения = Истина) экспорт
	Префикс=СокрЛП(ВРег(Префикс));
	Если ПустаяСтрока(Префикс) Тогда Возврат Ложь; КонецЕсли;
	ДопустимыеСимволы = "ABCDEFGHJKLMNPRSTUVWXYZ0123456789";
	Для НомерСимвола = 1 По СтрДлина(Префикс) Цикл
		Если Найти(ДопустимыеСимволы, Сред(Префикс,НомерСимвола,1)) = 0 Тогда 
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	Возврат Истина;
КонецФункции

Процедура ОсновныеДействияФормытексс(Кнопка)
	
	
КонецПроцедуры



