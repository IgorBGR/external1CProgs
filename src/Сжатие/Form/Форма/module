	//РазрешеныСимволы = "1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnmёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ-=\/.,)_+;%:?*!№`~@#$^&([]{}'<>|§♠╔╕╞╗╤╥╙╘╒╓╫╪┘┌·°ўЎїЇєЄ∙·√№¤■↕◘○◙♂♀♪♫☼►"; 

Процедура КнопкаВыполнитьНажатие(Кнопка)
	ЗамерВремя = ТекущаяДата();
	СтруктураПараметров = Вычислить("СжатьТекст(Распакован, СжатьИтераций)");
	Упакован = СтруктураПараметров.Текст;
	Разделители = СтруктураПараметров.Разделители;
	Сообщить(Строка(СтруктураПараметров.Итераций) + " итераций за "+ Строка(ТекущаяДата() - ЗамерВремя)+ " сек.");
	ПересчитатьРазмеры();
	МассивСжатий = СтруктураПараметров.МассивСжатий;
	Минимум = стрДлина(Упакован);
	ЛучшееСжатие = СтруктураПараметров.Итераций; 
	Сообщить("Лучшее сжатие при "+Строка(ЛучшееСжатие) + " итераций. размер "+ Строка(Минимум));
КонецПроцедуры

Процедура ОсновныеДействияФормыРаспаковать(Кнопка)
	Распакован = Вычислить("Распаковать(Упакован, Разделители)");
	ПересчитатьРазмеры();
КонецПроцедуры

Процедура РаспакованПриИзменении(Элемент)
	ПересчитатьРазмеры();
КонецПроцедуры

Процедура УпакованПриИзменении(Элемент)
	ПересчитатьРазмеры();
КонецПроцедуры
 
Процедура ПриОткрытии()
Т="ключХформЗяgtOЩ4е2VШедГтeНDиЕлиЙаемыйЁ Iдулъг6ммEёа79m Rдnзаbнеv6сcроxнаz мlисkимj дhвлgYеf7оdгоsреa 9pпоoзделfлi2 RBрыйu6ботyяGсtDь rакeанwUиqм M.
|NтоBовVныC вZльL сKходJ, HетGатDRЙчеQвAoлPя OмоIенqтf TкоRа EноWстQ f6ций0иpпаRв8 пр7ра6KжЕ4 обyк3 текQ2Позд6gяемHвыKкачал9сVершUW нUужную3у!
|ЦеLhwWй39эBШNПосRLкуZ 1С ниRгдEнTтaбVалосьKжjrkJCTRды иЙ2ыHB7jqIQьhwCхlGодVKомнfLzNОбyкEбылEzпkwEс цеLю «6змять Iзг»pдлO6зgечqяNПxёcпxQ6нtO«Кe еQь»Hникeих га6нтийpотвGQвUWQ9нToд6зумеваGNВозIжW PезCMoбочCMэффекBMyыhwWs7иложqOЩvчYаеIQь2V7и4иHWZ плDЗT1СpН7ГусIтaWШ kJCхnVHEН жTbщYmoIщ9крипBг6фииHпутеMуQаWвк9паxлOz2ыъей
|СжЕT(избаgqTот избыBчWQи)2mбоLшоMAе0dkJYhVоLWlГлUWpтaбуGlWsZaмqHт.кlWsк6тWdJY oKжjаеIму2уNВKаIMнижvMPе3EсоздаGu  IжWdQоZQавYьZnKвоеsъO9дwCй2 cпeуGся79kPнqиHН zзывЁ «СаIc8ывающийсOархив ил9SFX». КQЕuZыKейчас чYаGTН-жTb8wpх6нYсOвnTв b8wWмZидеHmbпуске39выPнtяdцГу6 c8киNИнQрукцияNДля4я2EvобJиIKRпирVrил9ввеQ9сжjЁ2ZZерхvTPTвводE«ИсJCй»HуказrмeсjаLWTAо0hля4O9zжrнEкWпку «У8Dь». Чеaз vRBxTвaмO(прибЙзfLW 5lинут)dёbPнY оQаLCTPOЗы39у8wCм2оM9«Раiи»NВ окнTсообщqй будGZывГUEQЕQика4я: зEсRLR0dизошло4еNСтxкE6iей oKут9ЩХоMдлOc8к9сжDоs2аHдЙнEэBs ХEвсегдE6внEAу зD6чUCх0.";
for а=1 to 68 do в=Mid("ХЗЩШГНЕЙЁъёmnbvcxzlkjhgfdsapoiuytrewqMNBVCZLKJHGDAPOIUYTREWQ09876432",а,1);б=find(Т,в);Т=StrReplace(Mid(Т,б+1),в,Лев(Т,б-1));enddo;
Распакован = Т;
СжатьИтераций = 100;
КонецПроцедуры

Процедура ПересчитатьРазмеры()
	УпакованоРазмер = Строка(СтрДлина(Упакован));
	SFX = ПолучитьТекстМиниСамораспаковки(Упакован,Разделители);
	
	РаспакованоРазмер = Строка(СтрДлина(Распакован));
	Попытка
		ЭлементыФормы.Процент.Заголовок = "Сжат на "+ 
		Формат(100 - ((СтрДлина(Упакован) + стрДлина(Разделители))/стрДлина(Распакован))*100,"ЧДЦ=0; ЧГ=0") + "%" + Символы.ПС + Символы.ВК +
		"SFX:"+Строка(СтрДлина(SFX));
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура ОсновныеДействияФормыСамараспаковкаВыполнить(Кнопка)
	Т = "";
	Выполнить(SFX);
	Распакован = Т;	
КонецПроцедуры
//----------- Методы для распаковки------------
Функция Распаковать(Знач Т,Р)
	for а=1 to StrLen(Р) do
		в=Mid(Р,а,1);
		б=find(Т,в);
		Т=StrReplace(Mid(Т,б+1),в,Лев(Т,б-1));
	enddo;
	Возврат Т;
КонецФункции
//------SFX-------------------------------------         
Функция ПолучитьТекстМиниСамораспаковки(Т,Р)
	Возврат "t="""+СтрЗаменить(СтрЗаменить(Т,Символы.ПС,Символы.ПС+"|"),"""","""""")
	+""";for а=1 to "+Строка(StrLen(Р))
	+" do в=Mid("""+Р+""",а,1);б=find(t,в);Т=StrReplace(Mid(t,б+1),в,Лев(t,б-1));enddo;";
КонецФункции
//--------------------------------------------------------
Функция ПолучитьТекстМиниДляVBNET(знач Т,знач Р)
	Если СтрЧислоВхождений(Т,символы.ПС) > 0 Тогда
		СтруктураПараметров = ИнициализироватьСтруктуру(Т);
		СтруктураПараметров.Разделитель = Лев(НайтиНеиспользованныеСимволы(Т, СтруктураПараметров.РазрешеныСимволы),1);	
		СтруктураПараметров.ОптимальноеСлово = Символы.ПС;
		СтруктураПараметров.Разделители = Р;
		УпаковатьСтроку(СтруктураПараметров);	
		Т = СтруктураПараметров.Текст;
		Р = СтруктураПараметров.Разделители;
	КонецЕсли;
	Исходник = "dim t As String   
	|  dim b AS String
	| dim c AS Integer
	|	t=УпакованТекст""
	|	for i AS Integer = 1 to КоличествоСимволов
	|		b=Mid(""Разделители"",i,1)
	|		c=InStr(t,b)
	|		t=Replace(Mid(t,c+1),b,Left(t,c-1))
	|	next
	|   Console.WriteLine(t)    ";
	Т = """" + СтрЗаменить(Т,"""","""""");
	Если СтрЧислоВхождений(Т,символы.ПС) > 0 Тогда	
		 Т = СтрЗаменить(Т,Символы.ВК,"");Т = "vbNewLine & "+СтрЗаменить(Т,Символы.ПС,"");
	КонецЕсли;
	Исходник = СтрЗаменить(Исходник ,"КоличествоСимволов",Строка(StrLen(Р)));
	Исходник = СтрЗаменить(Исходник ,"Разделители",Р);				
	Исходник = СтрЗаменить(Исходник ,"УпакованТекст",Т);				
	Возврат Исходник;
КонецФункции
//-----------Упаковка-------------
Функция НайтиНеиспользованныеСимволы(Текст, РазрешеныСимволы )
	Неиспользуемые = "";
	Для ПозицияРазделителя = 1 По СтрДлина(РазрешеныСимволы) Цикл  
		РазрешенСимвол = Сред(РазрешеныСимволы, ПозицияРазделителя, 1); 
		Неиспользуемые = Неиспользуемые + ?(СтрЧислоВхождений(Текст,РазрешенСимвол) = 0,РазрешенСимвол,"");
	КонецЦикла;
	Возврат Неиспользуемые; 
КонецФункции
//LZSS
Функция ИнициализироватьСтруктуру(Текст)
	РазрешеныСимволы = "1234567890QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnmёйцукенгшщзхъфывапролджэячсмитьбюЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ-=\/.,)_+;%:?*!№`~@#$^&([]{}'<>|§♠╔╕╞╗╤╥╙╘╒╓╫╪┘┌·°ўЎїЇєЄ∙·√№¤■↕◘○◙♂♀♪♫☼►";
	Если не ПустаяСтрока(ИзСтроки) Тогда
		 РазрешеныСимволы = ИзСтроки;
	КонецЕсли;
	Возврат Новый Структура("Текст , Сжатие , Разделители , Успешно, Итераций, МассивСжатий, ОптимальноеСлово, Разделитель , РазрешеныСимволы ", Текст,	0, "", Истина, 0, Новый Массив, "", "", РазрешеныСимволы );
КонецФункции

Функция СжатьТекст(Текст, СтепеньСжатия )
	СтруктураПараметров = ИнициализироватьСтруктуру(Текст);
	Пока СтруктураПараметров.Итераций < СтепеньСжатия И НайтиОптимальноеСловоСжатия(СтруктураПараметров) Цикл 
		УпаковатьСтроку(СтруктураПараметров);
		СтруктураПараметров.МассивСжатий.Добавить(стрДлина(СтруктураПараметров.Текст));
		СтруктураПараметров.Итераций = СтруктураПараметров.Итераций + 1;
		ОбработкаПрерыванияПользователя();
		Состояние(Строка(СтруктураПараметров.Итераций));
	КонецЦикла;
	Возврат СтруктураПараметров;	
КонецФункции
//LZSS
Функция НайтиОптимальноеСловоСжатия(СтруктураПараметров)
	Успешно = Ложь;
	Текст = СтруктураПараметров.Текст;
	СтруктураПараметров.Разделитель = Лев(НайтиНеиспользованныеСимволы(Текст, СтруктураПараметров.РазрешеныСимволы),1);
	Если СтруктураПараметров.Разделитель = "" Тогда Возврат Ложь; КонецЕсли;
	Т="ЕслиVСжатl94ейaДлdовi8аvКонецo - s + tин0имальнkЦикл_СтрP ПоA;BS
	|	5AзицияvWtasOтр9(8)R	o_а;DПолi0аd0ыKPокаvL9ВсегоvZ9lогоvXМ0kая9C5		B = 3Разделител4lие6PуктураПараметрi.7Текст8d0а9	Z3сR;5K3Цел(сR / 2);5a3P9(74и)t1;5C3ZO1; 5dя 632A K _5	dяW31A СRs6  _  BL3Сред(8,W, 6)SПiтор3PЧислоВхождений(8,L)SX3Zt6O(6s1) *AвторSV C > X Тогда B	C3XS	7ОптkоеСлiо3LS	7636S	Успешно3Ист0аSoV;	5DD";
	for а=1 to 32 do в=Mid("Vladivost0k_PAS5WORDKLZXCB346789",а,1);б=find(Т,в);Т=StrReplace(Mid(Т,б+1),в,Лев(Т,б-1));enddo;
	Выполнить(Т);
	Возврат Успешно;
КонецФункции

Процедура УпаковатьСтроку(СтруктураПараметров)
	Текст = СтруктураПараметров.Текст;
	Разделитель = СтруктураПараметров.Разделитель;
	СтрокаДляСжатия = СтруктураПараметров.ОптимальноеСлово;
	СтруктураПараметров.Текст = СтрокаДляСжатия + Разделитель + СтрЗаменить(Текст, СтрокаДляСжатия, Разделитель);
	СтруктураПараметров.Разделители = Разделитель + СтруктураПараметров.Разделители;
КонецПроцедуры
//Упаковка2
Процедура ОсновныеДействияФормыСжатие2(Кнопка)
	Упакован = СтрЗаменить(СтрЗаменить(ЗначениеВСтрокувнутр(Новый ХранилищеЗначения(Распакован, Новый СжатиеДанных(9))),Символы.ПС,Символы.ПС+"|"),"""","""""");
    ПересчитатьРазмеры();
	SFX = "Т=ЗначениеИзСтрокиВнутр("""+Упакован+""").Получить()";
КонецПроцедуры

Процедура ОсновныеДействияФормыУпаковатьВБА(Кнопка)
	ПересчитатьРазмеры();
	SFX = ПолучитьТекстМиниДляVBNET(Упакован,Разделители);
КонецПроцедуры
//----------------------------------------------
