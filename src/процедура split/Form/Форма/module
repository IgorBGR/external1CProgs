Функция РазложитьСтрокуВМассивПодстрок(РазбираемаяСтрока, Разделитель= "," )
// РазбираемаяСтрока - строка исходного текста
// Разделитель - разделитель элементов строки
Возврат ЗначениеИзСтрокиВнутр("{""#"",51e7a0d2-530b-11d4-b98a-008048da3034,{0,{""S"",""" + СтрЗаменить(СтрЗаменить(РазбираемаяСтрока, """", """"""), Разделитель, """},{""S"",""") + """}}}");
КонецФункции


Процедура КнопкаВыполнитьНажатие(Кнопка)
	СтруктураПараметров = СжатьТекст(Распакован);
	Упакован = СтруктураПараметров.Текст;
	Разделители = СтруктураПараметров.Разделители;
КонецПроцедуры

Процедура ОсновныеДействияФормыРаспаковать(Кнопка)
	Распакован = Распаковать(Упакован, Разделители);
КонецПроцедуры


//-----------Методы для распаковки------------
Функция Split(Знач РазделеннаяСтрока,Разделитель = ",")
	Возврат ОбщегоНазначения.РазложитьСтрокуВМассивПодстрок(РазделеннаяСтрока, Разделитель);
КонецФункции

функция Join(МассивСтрок, Разделитель = ",")
	ВыходнаяСтрока = "";
	Для Каждого ЭлементМассива из МассивСтрок Цикл
		ВыходнаяСтрока = ВыходнаяСтрока + ЭлементМассива + Разделитель;
	КонецЦикла;
	Возврат	ВыходнаяСтрока; 
КонецФункции

Функция Pop(МассивСтрок)
	ВыходнаяСтрока = МассивСтрок.Получить(МассивСтрок.ВГраница());
	МассивСтрок.Удалить(МассивСтрок.ВГраница());
	Возврат ВыходнаяСтрока;
КонецФункции

Функция Распаковать(ВходнаяСтрока, СтрокаРазделителей)
	Для ПозицияРазделителя = 1 По СтрДлина(СтрокаРазделителей) Цикл 
		Разделитель = Сред(СтрокаРазделителей, ПозицияРазделителя, 1);
		МассивСтрок = Split(ВходнаяСтрока, Разделитель);
		Разделитель = Pop(МассивСтрок);
		ВходнаяСтрока = Join(МассивСтрок, Разделитель) 
	КонецЦикла;
	Возврат ВходнаяСтрока;
КонецФункции
//--------------------------------------------------------


//-----------Упаковка-------------
Функция НайтиНеиспользованныеСимволы(Текст)
	РазрешеныСимволы = "ё1234567890-=йцукенгшщзхъфывапролджэ\ячсмитьбю.ЁЙЦУКЕНГШЩЗХЪФЫВАПРОЛДЖЭЯЧСМИТЬБЮ,!№;%:?*)_+`~@#$^&([]{}'<>QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasdfghjklzxcvbnm|§♠╔╕╞╗╤╥╙╘╒╓╫╪┘┌";
	Неиспользуемые = "";												
	Для ПозицияРазделителя = 1 По СтрДлина(РазрешеныСимволы) Цикл  
		РазрешенСимвол = Сред(РазрешеныСимволы, ПозицияРазделителя, 1); 
		Неиспользуемые = Неиспользуемые + ?(СтрЧислоВхождений(Текст,РазрешенСимвол) = 0,РазрешенСимвол,"");
	КонецЦикла;
	Возврат Неиспользуемые; 
КонецФункции

Функция СжатьТекст(Текст)
	СтруктураПараметров = Новый Структура("Текст , Сжатие , Разделители , Успешно ", Текст,	4, "", Ложь);
	УпаковатьСтроку(СтруктураПараметров);
	Возврат СтруктураПараметров;	
КонецФункции

Процедура УпаковатьСтроку(СтруктураПараметров)
	Текст = СтруктураПараметров.Текст;
	Разделитель = Лев(НайтиНеиспользованныеСимволы(Текст),1);
	Сжатие = СтруктураПараметров.Сжатие;
	Если Сжатие < 2 Тогда Возврат; КонецЕсли;
	Повторы = 1;
	СтрокаДляСжатия = "";
	Для ПозицияТекста = 1 По СтрДлина(Текст) Цикл  
		СтрокаТекста = Сред(Текст, ПозицияТекста, Сжатие);
		Повтор = СтрЧислоВхождений(Текст,СтрокаТекста);
		Если Повтор > Повторы Тогда 
			Повторы = Повтор;
			СтрокаДляСжатия = СтрокаТекста;
		КонецЕсли;	
	КонецЦикла;
	Если Не СтрокаДляСжатия = "" Тогда
		СтруктураПараметров.Текст = СтрЗаменить(Текст, СтрокаДляСжатия, Разделитель) + Разделитель + СтрокаДляСжатия;
		СтруктураПараметров.Разделители = СтруктураПараметров.Разделители + Разделитель;
	Иначе
		СтруктураПараметров.Сжатие = Сжатие - 1;
		УпаковатьСтроку(СтруктураПараметров);
	КонецЕсли;
КонецПроцедуры

